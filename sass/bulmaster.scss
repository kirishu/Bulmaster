@charset "utf-8";
/*! bulmaster | github.com/kirishu/bulmaster */

// override variables of bulma
// ※bulmaのimportを行う前に定義しておく
$primary: hsl(204, 71%, 53%);
$body-size: 14px;
$modal-z: 1200;
$family-primary: "Hiragino Kaku Gothic ProN", "Yu Gothic Medium", YuGothic, Meiryo, sans-serif;
$family-monospace: Menlo, Monaco, Consolas, "Courier New", monospace;
$radius-small: 4px;
$column-gap: .25rem .5rem;
$label-weight: 400;
// ---------------------------

// variables of this file
$header-height: 52px;           // ヘッダ高さ
$page-padding-bottom: 100px;    // ページpdding下
$menu-width: 250px;             // メニュー幅
$menu-width-shrink: 12px;       // switchコントロールで縮小されたときのメニュー幅
$anime-duration: .3s;           // アニメーションの変化時間
// z-index
$z-icon-button: 800;            // topへ移動やハンバーガなどのアイコンのz-index
$z-menu: 1100;
$z-block-ui: 9000;
// colors
$header-color: #fff;
$header-bgcolor: darken($primary, 50%);
$menu-bgcolor: darken($primary, 35%);
$menu-hover-bgcolor: rgba(255,255,255,0.2);
$menu-child-bgcolor: rgba(255,255,255,0.05);
$menu-color: #fff;
$menu-label-color: #7a7a7a;
$menu-active-color:#fff;
$logo-color: $menu-color;
$logo-bgcolor: darken($primary, 40%);
$icon-humburger-head-color: #888;
$icon-humburger-head-hover-color: #fff;
$icon-humburger-body-color: #555;
$icon-humburger-body-hover-color: unset;
$icon-move-top-color: #555;

// customize
//@import "custom-sample.scss";

// import bulma v0.9.0
@import "../node_modules/bulma/bulma.sass";


// メニューul mixin
// $is_child : 子メニューのときはtrue
@mixin menu_ul($is_child) {

    list-style-type: none;
    width: inherit;

    li {
        padding: 0;
        float: none;

        a {
            display: block;
            color: $menu-color;
            font-weight: 400;
            font-size: 14px;
            text-decoration: none;
            margin-right: 1.15rem;
            padding-left: 12px !important;
            padding-top: 12px;
            padding-bottom: 11px;
            position: relative;
            z-index: 1;

            &.active {
                color: $menu-active-color;
                background: $primary !important;
                border-radius: 0 25px 25px 0;
                cursor: unset;
            }

            &:hover:not(.active) {
                color: $menu-color;
                background-color: $menu-hover-bgcolor !important;
                border-radius: 0 25px 25px 0;
            }

            // アイコン
            i, svg {
                width: 32px !important;
                margin-right: 4px;
                font-size: 1.33em;
                line-height: .75em;
                vertical-align: -.225em;
            }

            @if $is_child {
                // 子メニューのアイコン
                &::before {
                    font-size: 8px;
                    font-weight: normal;
                    margin-left: 12px;
                    margin-right: 14px;
                    opacity: .4;
                    content: '\025c9';
                }
            }

        }

        &.menu-label {
            text-transform: none !important;
            padding-left: 20px !important;
            line-height: 1.5 !important;
            font-size: .85em;
            font-weight: bold;
            color: $menu-label-color;
        }

        @if $is_child == false {
            // 子メニューがあるitem(li)
            &.has-children {
                > a {
                    cursor: default;
                    &::after {
                        font-size: 16px;
                        font-weight: bold;
                        position: absolute;
                    }
                }
                &:not(.open) {
                    > a::after {
                        content: "\03009";
                        transition: transform .3s ease-in-out, -webkit-transform .3s ease-in-out;
                        right: 10px;
                    }
                }

                // 子メニューの展開
                &.open {
                    background: $menu-child-bgcolor;

                    > a::after {
                        content: "\03009";
                        transform: rotate(90deg);
                        transition: transform $anime-duration ease-in-out, -webkit-transform .3s ease-in-out;
                        right: 12px;
                        padding-top: 8px;
                    }

                    > div.menu-child {
                        height: auto;
                        line-height: inherit;
                        opacity: 1;
                    }

                }

            }
        }

    }
}

// メニュー定義
menu {
    margin: 0;
    padding: 0;
    position: fixed;
    top: 0;
    width: $menu-width;
    height: 100vh;
    background-color: $menu-bgcolor;
    z-index: $z-menu;
    overflow: hidden;
    transition-duration: $anime-duration;

    // ロゴ
    .logo {
        width: 100%;
        height: $header-height;
        color: $logo-color;
        background-color: $logo-bgcolor;
        display: flex;
        align-items: center;
        a {
            width: inherit;
            color: $header-color;
            display: flex;
            align-items: center;

            // ロゴのアイコン
            > i, svg {
                width: 52px !important;
                font-size: 2.5em;
            }
            > div {
                font-weight: bold;
                font-size: 21px;
            }
        }
    }

    // メニュー項目  (.menu-list という名前だとbulmaと被ってメンドウ)
    .menu-items {
        width: inherit;
        height: calc(100% - #{$header-height});
        padding-bottom: $page-padding-bottom;
        overflow: hidden;
        &:hover {
            overflow-y: auto;
        }

        &::-webkit-scrollbar {
            width: 7px !important;
        }
        &::-webkit-scrollbar-track {
            background-color: transparent;
        }
        &::-webkit-scrollbar-thumb {
            background-color: #aaa;
            border-radius: 7px;
        }

        // メニュー（親）
        > ul {
            @include menu_ul(false);
        }

        // メニュー（子）
        div.menu-child {
            overflow: hidden;
            height: 0;
            line-height: 0;
            transition: all $anime-duration 0s linear;

            > ul {
                @include menu_ul(true);
            }
        }
    }

    // @Responsiveness
    @include until($desktop) {
        display: none;
    }

} // end of menu


// メニュー 表示/非表示 switch
menu .menu-switch {
    // @Responsiveness
    @include until($desktop) {
        display: none;
    }

    .switch {
        margin: 1rem 0 0 0;
        span {
            margin: 0;
        }
    }
}

// ヘッダnav
nav.header {
    @extend .navbar;

    min-height: $header-height;
    background-color: $header-bgcolor;
    color: $header-color;
    padding-left: 1.0rem;
    padding-right: 1.0rem;
    transition-duration: $anime-duration;
    svg {
        margin-right: .6rem;
    }

    .level-left {
        // タイトル
        font-size: 1.5rem;

        @include until($tablet) {
            display: flex !important;
            flex-wrap: wrap;

            .level-item {
                margin-bottom: 0 !important;
                margin-right: .75rem !important;
            }
        }
    }

    .level-right {
        @include until($tablet) {
            // bulmaではセンタリングしていたが、右寄せ回り込みを行う
            display: flex !important;
            flex-wrap: wrap;
            margin-top: .2rem !important;
        }

        .level-item {
            @include until($tablet) {
                // bulmaでは ":not(:last-child)" にだけ, 右・下のマージンを適用しているけど, wrapさせるためにmobileではすべてマージンを取る
                margin-right: .75rem !important;
                margin-bottom: .75rem !important;
            }
        }
    }

    .navbtn {
        @extend .button;
        @extend .is-small;
        @extend .is-primary;
        @extend .is-outlined;
        background-color: #fff;
        border-radius: $control-radius-small;
        font-size: .85rem;
    }

    // @Responsiveness
    @include from($desktop) {
        position: fixed;
        top: 0;
        left: $menu-width;
        right: 0;
        z-index: 30;
    }
    @include until($desktop) {
        left: 0;
        right: 0;
    }
}

// tablet以下のときに表示するモーダルメニューのアニメーション定義
// [JS auto generate]
// ※操作はJSで行う
.modal-menu {
    .modal-background {
        transition-duration: .5s;
        opacity: 0;
    }
    menu {
        display: block;
        transition-duration: .5s;
        transform:translateX($menu-width * -1);
    }
}

// メニュー表示ハンバーガーボタン
.icon-hamburger {
    color: $icon-humburger-head-color;
    opacity: .5;
    cursor: pointer;
    &:hover {
        color: $icon-humburger-head-hover-color;
        opacity: 1;
    }
    display: none;

    // @Responsiveness
    @include until($desktop) {
        display: flex;
    }
}
// メニュー表示ハンバーガーボタン（ヘッダの中でなくbodyの直下にある場合の追加設定）
body > .icon-hamburger {
    position: fixed;
    top: 16px;
    left: 16px;
    font-size: 1.8rem;
    z-index: $z-icon-button;
    color: $icon-humburger-body-color !important;
    &:hover {
        color: $icon-humburger-body-hover-color;
        opacity: 1;
    }

    // @Responsiveness
    @include until($desktop) {
        display: block !important;
    }
}

// メイン
main {
    margin-left: $menu-width;
    transition-duration: $anime-duration;

    // @Responsiveness
    @include until($desktop) {
        margin-left: 0;
    }
}

// ***************************
// shrink-menuに切り替わったときの設定
// ***************************
// shrink-menu幅
.shrink-menu-width {
    @include from($desktop) {
        width: $menu-width-shrink !important;
    }
}
// nav left
.shrink-menu-nav {
    @include from($desktop) {
        left: $menu-width-shrink !important;
    }
}
// main left-margin
.shrink-menu-main {
    @include from($desktop) {
        margin-left: $menu-width-shrink !important;
    }
}
// menu switchによる縮小時のオーバレイ
#__bulmaster_shrink_menu_overlay {
    height: 100vh;
    top: 0;
    overflow: hidden;
    display: flex;
    background-color: $menu-bgcolor;
    position: absolute;
    cursor: pointer;
    z-index: $modal-z;
    text-align: left;
    align-items: center;

    width: 0;
    opacity: 0;
    transition: all $anime-duration 0s linear;

    &::after {
        content: "\025e5";
        transform: rotate(45deg);
        color: $menu-color;
        display: block;
        font-size: 4px;
        margin-left: -2px;
    }

    &.shrink {
        width: 100%;
        opacity: 1;
    }

    &:hover {
        background-color: $primary;
    }

    // @Responsiveness
    @include until($desktop) {
        display: none;
    }
}


// コンテナ
.container {
    margin-top: calc(#{$header-height} + 20px);
    max-width: unset !important;    // bulmaのResponsivenessを無視する

    margin-left: 0 !important;      // 1408px以上のときにセンタリングされないように
    margin-right: 0 !important;     // 〃

    // @Responsiveness
    @include until($desktop) {
        margin-top: 0;
    }
}

// コンテント
.content {
    margin: 0 !important;
    padding: 0 2rem 2rem 2rem;

    &:last-child {
        padding-bottom: $page-padding-bottom;
    }

    ul {
        list-style: disc outside;
        margin-left: 2em;
        margin-top: 1em;
        margin-bottom: 1rem;
    }
}

// bulma override
.control {
    margin-bottom: 0 !important;
}

// ページ先頭ボタン
// [JS auto generate]
.icon-move-top {
    position: fixed;
    bottom: 16px;
    right: 20px;
    color: $icon-move-top-color;
    opacity: .2;
    visibility: hidden;     // visibilityを変更して出現させるのはJSで行う
    z-index: $z-icon-button;
    font-size: 2.25em;
    &:hover {
        opacity: .5;
    }
}

// block-ui
// [JS auto generate]
.block-ui {
    @extend .modal;
    z-index: $z-block-ui;
    cursor: wait;
    > .modal-background {
        > div {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translateY(-50%) translateX(-50%);
            -webkit-transform: translateY(-50%) translateX(-50%);
            color: #ccc;
        }
    }
}


pre {
    background-color: transparent !important;
}

// 単語で改行させる設定
.is-break-word {
    word-wrap: break-word !important;
    word-break: break-word !important;
    white-space: pre-wrap !important;
}

// 単語の途中でも改行させる設定
.is-break-all {
    word-wrap: break-word !important;
    word-break: break-all !important;
    white-space: pre-wrap !important;
}

// モーダル
.modal-card {
    opacity: 0;         // JSのshowModal()へ変化する
    transition: opacity 300ms 0s ease-in-out;
}

// *******************************
// form parts
// *******************************

// ===============================
// Switchコントロール (checkbox)
// ===============================
.switch {
    -webkit-tap-highlight-color: transparent;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    label {
        cursor: pointer;
        font-size: 1rem;

        input[type=checkbox] {
            opacity: 0;
            width: 0;
            height: 0;
            &:checked+.lever {
                // enableでonのときの設定
                background-color: $primary;
                border-color: $primary;
                &::before, &::after {
                    left: calc(1rem + 1px);
                }
                &::after {
                    background-color: #fff;
                }

                &:checked {
                    background-color: #949494;
                    border-color: #949494;
                }
            }
            &:disabled+.lever {
                cursor: default;
                background-color: #e9ecef;
                border-color: #949494;
                &::after {
                    background-color: #949494;
                }
            }
        }

        .lever {
            content: "";
            display: inline-block;
            position: relative;
            width: calc((1rem + 2px) * 2);
            height: calc(1rem + 4px);
            border-radius: calc((1rem + 4px) / 2);
            -webkit-transition: background $anime-duration ease;
            transition: background $anime-duration ease;
            vertical-align: middle;
            margin: 0 10px;
            // enableでoffのときの設定
            background-color: #fff;
            border: #adb5bd solid 1px;

            &::before, &::after {
                content: "";
                position: absolute;
                display: inline-block;
                width: 1rem;
                height: 1rem;
                border-radius: 50%;
                left: 1px;
                top: 1px;
                -webkit-transition: left $anime-duration ease, background $anime-duration ease, -webkit-box-shadow 0.1s ease, -webkit-transform .1s ease;
                transition: left $anime-duration ease, background $anime-duration ease, -webkit-box-shadow 0.1s ease, -webkit-transform .1s ease;
                transition: left $anime-duration ease, background $anime-duration ease, box-shadow 0.1s ease, transform .1s ease;
                transition: left $anime-duration ease, background $anime-duration ease, box-shadow 0.1s ease, transform .1s ease, -webkit-box-shadow 0.1s ease, -webkit-transform .1s ease;
            }
            &::before {
                background-color: #949494;
            }
        }
    }

    &.is-marginless .lever {
        margin: 0;
    }
}

// Dropdown button (navヘッダ内)
nav.header .dropdown {
    .dropdown-content {
        border: solid 1px $primary;
        a {
            color: $primary;
            background-color: #fff;;

            &:hover {
                color: #fff;
                background-color: $primary;
            }
        }
    }
}

// ===============================
// Line operation button
// ===============================
// Line operation button SVG
@mixin line-operation-button-image($type, $color) {

    $svg: '<svg xmlns="http://www.w3.org/2000/svg" ';
    @if $type == UP {
        $svg: $svg + 'viewBox="0 0 7 4" width="7" height="4">'
            + '<path fill="' + $color + '" transform="matrix(1.1689513,0,0,0.77008265,-1.2377025e-6,0.91966795)" d="M 5.9882684,3.9835038 2.9941386,3.9917494 8.7381299e-6,3.999995 1.4899328,1.4028797 2.9798568,-1.1942356 4.4840626,1.3946341 Z" />';
    } @else if $type == DOWN {
        $svg: $svg + 'viewBox="0 0 7 4" width="7" height="4">'
            + '<path fill="' + $color + '" transform="matrix(1.1689513,0,0,-0.77008265,-1.2377025e-6,3.0803346)" d="M 5.9882684,3.9835038 2.9941386,3.9917494 8.7381299e-6,3.999995 1.4899328,1.4028797 2.9798568,-1.1942356 4.4840626,1.3946341 Z" />';
    } @else if $type == REMOVE {
        $svg: $svg + 'viewBox="0 0 7 7" width="7" height="7" style="stroke:' + $color + ';stroke-width:2">'
            + '<line x1="0" y1="0" x2="7" y2="7" />'
            + '<line x1="7" y1="0" x2="0" y2="7" />';
    }
    $svg: $svg + '</svg>';

    background-image: inline-svg($svg);
    background-repeat: no-repeat;
    background-position: center center;
}

@function inline-svg($string) {
    @return url('data:image/svg+xml;utf8,#{url-encode($string)}');
}
// URLエンコード関数
@function url-encode($string) {
    // 実際は#だけエンコできれば良いらしい
    $map: ( "#": "%23", "[": "%5B", "]": "%5D" );
    $new: $string;

    @each $search, $replace in $map {
        $new: str-replace($new, $search, $replace);
    }

    @return $new;
}
// 文字列置換関数
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// 行制御ボタン
.line-operation-button {
    display: inline-flex;

    > div {
        float: left;
    }

    a {
        @extend .button;
        @extend .is-outlined;
        @extend .is-link;
        @extend .is-small;
        border-radius: 0;
        display: block;
        margin: 0;
        padding: 0;
    }

    // 行UP
    .lob-up {
        width: calc(#{$size-normal} * 3);
        font-size: calc(#{$size-normal} / 2);

        border-bottom: 0;
        border-top-left-radius: $radius-small;
        @include line-operation-button-image('UP', $primary);
        &:hover {
            @include line-operation-button-image('UP', 'white');
        }
        &:active {
            background-color: white;
        }
    }
    // 行DOWN
    .lob-down {
        width: calc(#{$size-normal} * 3);
        font-size: calc(#{$size-normal} / 2);

        border-bottom-left-radius: $radius-small;
        @include line-operation-button-image('DOWN', $primary);
        &:hover {
            @include line-operation-button-image('DOWN', 'white');
        }
        &:active {
            background-color: white;
        }
    }
    // 行REMOVE
    .lob-remove {
        width: calc(#{$size-normal} * 1.5);
        font-size: $size-normal;

        border-top-right-radius: $radius-small;
        border-bottom-right-radius: $radius-small;
        border-left: 0;
        @include line-operation-button-image('REMOVE', $primary);
        &:hover {
            @include line-operation-button-image('REMOVE', 'white');
        }
        &:active {
            background-color: white;
        }
    }

    // .is-smallの時の大きさ
    &.is-small {
        .lob-up, .lob-down {
            width: calc(#{$size-small} * 3);
            font-size: calc(#{$size-small} / 2);
        }
        .lob-remove {
            width: calc(#{$size-small} * 2);
            font-size: $size-small;
        }

    }
}

// 行制御ボタン：上下移動の2つだけの場合
.line-operation-button-noremove {
    @extend .line-operation-button;
    .lob-up {
        border-top-right-radius: $radius-small;
    }
    .lob-down {
        border-bottom-right-radius: $radius-small;
    }
}


// *******************************
// components
// *******************************

// Jumbotron style
.jumbotron {
    @extend .hero;
    @extend .is-medium;
    margin-bottom: 3rem;
    .hero-body {
        padding: 5rem 1.5rem 5rem 1.5rem;
        h1.title {
            font-size: 5rem !important;
            font-weight: 400;
        }
    }

    hr {
        height: 1px;
        opacity: .6;
    }
}

// タブ付きグループパネル
.group-panel {
    border-radius: 6px;

    // 直下にdivは2つだけ定義すること
    > div:first-child {
        // タブ
        background-color: $menu-bgcolor;
        color: $menu-color;
        border-radius: 6px;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        padding: 0.5rem 2rem 0.5rem 1rem;
        display: inline-flex;
    }
    > div:last-child {
        // コンテンツ
        border: solid 1px $menu-bgcolor;
        border-radius: 6px;
        border-top-left-radius: 0;
        padding: 1.5rem;
        background: whitesmoke;
    }
}
